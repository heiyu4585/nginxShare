#Nginx进程，一般设置为和CPU核数一样
worker_processes  2;

events {
  worker_connections  1024;  ## Default: 1024
}

http{

 fastcgi_intercept_errors on; # 单独配置此项无效
    proxy_intercept_errors on;

  #设置日志模式
    log_format compression '$remote_addr - $remote_user [$time_local] '
                               '"$request" $status $body_bytes_sent '
                               '"$http_referer" "$http_user_agent" "$gzip_ratio"';

    error_log   /usr/local/etc/nginx/log/error.log;
    error_log  /usr/local/etc/nginx/log/notice.log  notice;
    #error_log  /usr/local/etc/nginx/logs/info.log  info;



    #设定实际的服务器列表
    upstream front-end-dev{
        server 10.0.1.128:8080;
    }

    upstream back-end{
        server 10.0.1.128:7001;
    }

    server{
            listen       80;
            server_name  www.front-end.com;
            rewrite ^ https://$http_host$request_uri? permanent;    # force redirect http to https
        #return 301 https://$http_host$request_uri;

    }

    server {
        listen 443 ssl;
               ssl_certificate /usr/local/etc/nginx/ssl/nginx.crt;
               ssl_certificate_key /usr/local/etc/nginx/ssl/nginx.key;
           keepalive_timeout   70;
            server_name  www.front-end.com;
          ## #禁止在header中出现服务器版本，防止黑客利用版本漏洞攻击
           server_tokens off;
          # #如果是全站 HTTPS 并且不考虑 HTTP 的话，可以加入 HSTS 告诉你的浏览器本网站全站加密，并且强制用 HTTPS 访问
           #add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";
               # ......
               fastcgi_param   HTTPS               on;
              fastcgi_param   HTTP_SCHEME         https;


           # 书写路径时注意，即使使用了include将conf文件写到其它目录，证书路径依然是相对于nginx.conf而言的，且windows下不能以./开头
       # ssl_certificate /usr/local/etc/nginx/ssl/server.crt;
        #ssl_certificate_key /usr/local/etc/nginx/ssl/server.key;
        #ssl_session_timeout 5m;
       # ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # 使用的协议
       # ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE; # 配置加密套件，写法遵循openssl标准
       # ssl_prefer_server_ciphers on;


         access_log /usr/local/etc/nginx/log/front-end.log compression;

        location / {
            root /Users/allin/workspaces/nginxShare/frontEnd/dist;
            index  index.html index.htm; #默认访问文件

            error_page 404 404.html;
            #error_page 404 http://www.baidu.com;
        }

       #location / {
       #       proxy_pass http://front-end-dev;
       # }

       location /api/ {
              proxy_set_header Host $host:$server_port;
              rewrite   ^/api/(.*)$ /$1 break;
              proxy_pass http://back-end;
        }


       #静态文件，nginx自己处理

               location ~ \.(gif|jpg|png)$ {
                    root /Users/allin/workspaces/nginxShare/frontEnd/dist/static/images;
               }


       # error_page 404 /404.html;
       ## location = /404.html {
       #         root /Users/allin/workspaces/nginxShare/frontEnd/dist/404.html;
        #}

    }

    server {
            listen 80;
            server_name www.back-end.com;
               location / {
                      proxy_pass http://back-end;
                }
        }
}